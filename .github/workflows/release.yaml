name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  tag:
    name: Create GitHub tag
    runs-on: ubuntu-latest
    outputs:
      taggedVersion: ${{ steps.parse-app-version.outputs.appVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse app version from Chart definition
        id: parse-app-version
        run: |
          appVersion=$(grep '^[[:space:]]*appVersion:' ./chart/Chart.yaml | awk -F': ' '{print $2}' | sed 's/^"\(.*\)"$/\1/')
          echo "appVersion=$appVersion" >> "$GITHUB_OUTPUT"
      
      - name: Create tag
        run: |
          appVersion=${{ steps.parse-app-version.outputs.appVersion }}
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag $appVersion
          git push origin $appVersion

  build-and-publish:
    name: Build and publish image
    runs-on: ubuntu-latest
    needs: tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.tag.outputs.taggedVersion }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and publish image to Quay
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: quay.io/jcluppnow/vpa-manager:latest,quay.io/jcluppnow/vpa-manager:${{ needs.tag.outputs.taggedVersion }}
